use airlines_data;

-- Question 1 (Marks: 3)
-- Objective: Determine, for flights that actually departed later than scheduled, what the departure delay is (in minutes).
-- Calculate the Delay in Departures for Delayed Flights
-- Question Template: Display following columns flight_id, flight_no, departure_delay_minutes**

select * from flights;

SELECT flight_id,flight_no,
TIMESTAMPDIFF(MINUTE, scheduled_departure, actual_departure) AS departure_delay_minutes
FROM flights;

SELECT  flight_id, flight_no,
TIMESTAMPDIFF(MINUTE, scheduled_departure, actual_departure) AS departure_delay_minutes
FROM flights where actual_departure >scheduled_departure;

-- Question 2 (Marks: 3)
-- Objective: Show how frequently each aircraft is used by counting the number of flights operated by each aircraft.
-- List Flights Grouped by Aircraft to See Usage Frequency
-- Question Template: Display following columns aircraft_code, total_flights, avg_flight_duration_minutes**

select * from aircrafts;

select * from flights;

SELECT a.aircraft_code,COUNT(f.flight_id) AS total_flights,
ROUND(AVG(TIMESTAMPDIFF(MINUTE, f.actual_departure, f.actual_arrival)), 2) 
AS avg_flight_duration_minutes FROM aircrafts a
LEFT JOIN flights f ON a.aircraft_code = f.aircraft_code
WHERE  f.actual_departure IS NOT NULL AND f.actual_arrival IS NOT NULL
GROUP BY  a.aircraft_code order by total_flights desc;

-- Question 3 (Marks: 3)
-- Objective: Aggregate the total revenue generated by each flight by summing up the fare amounts from the ticket_flights table.
-- Calculate Total Revenue per Flight from the Ticket_Flights Table
-- Question Template: Display following columns flight_id, flight_no, total_revenue**

select * from flights;

select * from ticket_flights;

SELECT f.flight_id, f.flight_no, SUM(tf.amount) AS total_revenue
FROM  flights f  INNER JOIN ticket_flights tf ON f.flight_id = tf.flight_id
GROUP BY  f.flight_id, f.flight_no ORDER BY total_revenue DESC;

-- Question 4 (Marks: 3)
-- Objective: Examine boarding pass data to identify how passengers are being boarded by calculating the average boarding number per flight.
-- Analyze Boarding Numbers per Flight to Detect Patterns in Boarding Pass Allocation
-- Question Template: Display following columns flight_id, avg_boarding_no, total_boarding_passes**

select * from boarding_passes;

SELECT flight_id, ROUND(AVG(boarding_no), 2) AS avg_boarding_no,
COUNT(boarding_no) AS total_boarding_passes FROM boarding_passes
GROUP BY flight_id order by total_boarding_passes desc;

-- Question 5 (Marks: 3)
-- Objective: Identify seat occupancy by comparing the number of boarding passes (occupied seats) to the total seats available on an aircraft.
-- Determine Occupancy per Aircraft
-- Question Template: Display following columns flight_id, flight_no, aircraft_code, total_seats, occupied_seats, occupancy_rate_percentage**

select * from flights;

select * from boarding_passes;

select * from seats;

SELECT f.flight_id,f.flight_no,f.aircraft_code,s.total_seats,
COUNT(bp.ticket_no) AS occupied_seats,
ROUND(COUNT(bp.ticket_no) * 100.0 / s.total_seats, 2) AS occupancy_rate_percentage
FROM flights f INNER JOIN boarding_passes bp ON f.flight_id = bp.flight_id
INNER JOIN (SELECT aircraft_code,COUNT(seat_no) AS total_seats FROM seats  GROUP BY aircraft_code) s
ON f.aircraft_code = s.aircraft_code
GROUP BY f.aircraft_code, f.flight_id, s.total_seats
ORDER BY f.aircraft_code, f.flight_id;

use airlines_data;

-- Question 6 (Marks: 3)
-- Objective: Identify the three flights that generated the highest revenue based on ticket sales.
-- Top 3 Flights by Revenue
-- Question Template: Display following columns flight_id, flight_no, total_revenue**

select * from flights;

select * from ticket_flights;

SELECT  f.flight_id,f.flight_no, SUM(tf.amount) 
AS total_revenue FROM flights f
INNER JOIN  ticket_flights tf ON f.flight_id = tf.flight_id
GROUP BY f.flight_id, f.flight_no
ORDER BY total_revenue DESC;

SELECT  f.flight_id,f.flight_no, SUM(tf.amount) 
AS total_revenue FROM flights f
INNER JOIN  ticket_flights tf ON f.flight_id = tf.flight_id
GROUP BY f.flight_id, f.flight_no
ORDER BY total_revenue DESC LIMIT 3;

-- Question 7 (Marks: 3)
-- Objective: Determine the average flight duration for each aircraft model, allowing you to see how flight performance might vary between different models.
-- Average Flight Duration by Aircraft Model
-- Question Template: Display following columns model, avg_duration_minutes**

select * from flights;

select * from aircrafts;

SELECT  a.model,
ROUND(AVG(TIMESTAMPDIFF(MINUTE, f.actual_departure, f.actual_arrival)), 2) 
AS avg_duration_minutes FROM  flights f
INNER JOIN  aircrafts a ON f.aircraft_code = a.aircraft_code
WHERE f.actual_departure IS NOT NULL AND f.actual_arrival IS NOT NULL
GROUP BY a.model ORDER BY avg_duration_minutes DESC;

-- Question 8 (Marks: 3)
-- Objective: Count how many flights depart from each airport to assess airport activity levels.
-- Flight Count per Airport (Departure)
-- Question Template: Display following columns departure_airport, departure_flights

-- Write your SQL solution here**

select * from flights;

SELECT  departure_airport,COUNT(*) AS departure_flights
FROM  flights GROUP BY  departure_airport
ORDER BY  departure_flights DESC;

-- Question 9 (Marks: 3)
-- Objective: Count how many flights depart from and arrive at each airport to assess airport activity levels.
-- Flight Count per Airport (Arrival)
-- Question Template: Display following columns arrival_airport, arrival_flights**

select * from flights;

SELECT  arrival_airport, COUNT(*) AS arrival_flights
FROM  flights GROUP BY  arrival_airport
ORDER BY  arrival_flights DESC;

-- Question 10 (Marks: 3)
-- Objective: Analyze trends in bookings over time by grouping bookings by date, counting total bookings, and summing up the revenue.
-- Daily Booking Trends
-- Question Template: Display following columns booking_date, total_bookings, total_revenue

select * from bookings;

SELECT date(book_date) AS booking_date, COUNT(book_ref) AS total_bookings,
SUM(total_amount) AS total_revenue
FROM bookings GROUP BY booking_date
ORDER BY booking_date asc;

-- Question 11 (Marks: 3)
-- Objective: Identify the most common routes by counting the number of flights for each departureâ€“arrival airport pair.
-- Frequent Routes Analysis
-- Question Template: Display following columns departure_airport, arrival_airports, flights_count**

select * from flights;

SELECT departure_airport, arrival_airport,
COUNT(*) AS flights_count
FROM flights GROUP BY  departure_airport, arrival_airport
ORDER BY flights_count DESC;

-- Question 12 (Marks: 3)
-- Objective: Determine how many passengers boarded each flight by counting the boarding passes issued.
-- Passenger Boarding Summary per Flight
-- Question Template: Display following columns flight_id, passengers_boarded

select * from boarding_passes;

SELECT flight_id, COUNT(ticket_no) AS passengers_boarded
FROM boarding_passes GROUP BY  flight_id
ORDER BY passengers_boarded DESC;

-- Question 13 (Marks: 3)
-- Objective: Assess the boarding process by calculating the average boarding order number for each flight, which may indicate the boarding strategy or sequence.
-- Average Boarding Number per Flight
-- Question Template: Display following columns flight_id, avg_boarding_no**

select * from boarding_passes;

SELECT  flight_id, round(AVG(boarding_no),2) AS avg_boarding_no
FROM  boarding_passes
GROUP BY  flight_id ORDER BY avg_boarding_no DESC;

use airlines_data;

-- Question 14 (Marks: 3)
-- Objective: Aggregate the total amount spent by each passenger across all their tickets by joining the tickets and ticket_flights tables.
-- Total Spend per Passenger
-- Question Template: Display following columns passenger_id, total_tickets, total_spent**

select * from tickets;

select * from ticket_flights;

SELECT  t.passenger_id, COUNT(tf.ticket_no) AS total_tickets,
SUM(tf.amount) AS total_spent FROM tickets t
INNER JOIN ticket_flights tf ON t.ticket_no = tf.ticket_no
GROUP BY t.passenger_id
ORDER BY total_spent DESC;

-- Question 15 (Marks: 3)
-- Objective: Analyze the distribution of ticket volume and revenue across different fare conditions.
-- Fare?Condition Distribution
-- Question Template: Display following columns fare_conditions, tickets_sold, total_revenue**

select * from ticket_flights;

SELECT fare_conditions,COUNT(ticket_no) AS tickets_sold,
SUM(amount) AS total_revenue FROM ticket_flights
GROUP BY fare_conditions ORDER BY total_revenue DESC;

-- Question 16 (Marks: 3)
-- Objective: Aggregate total revenue generated by each departure?arrival airport route.
-- Revenue by Route
-- Question Template: Display following columns departure_airport, arrival_airport, total_route_revenue**

select * from flights;

select * from ticket_flights;

SELECT  f.departure_airport,f.arrival_airport,
SUM(tf.amount) AS total_route_revenue FROM flights f
INNER JOIN ticket_flights tf ON f.flight_id = tf.flight_id
GROUP BY f.departure_airport, f.arrival_airport
ORDER BY total_route_revenue DESC;

-- Question 17 (Marks: 2)
-- Objective: Identify the top 5 booking hours of the day by volume of bookings
-- Peak Booking Hours
-- Question Template: Display following columns booking_hour, bookings_count**

select * from bookings;

SELECT Hour(book_date) AS booking_hour,
COUNT(book_ref) AS bookings_count FROM bookings
GROUP BY booking_hour
ORDER BY bookings_count DESC LIMIT 5;




























































